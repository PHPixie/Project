<?php

require_once(dirname(__FILE__).'/mocks/misc.php');
require_once(dirname(__FILE__).'/../../system/classes/session.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013 - 02 - 06 at 08:47:19.
 * @runTestsInSeparateProcesses
 */
class sessionTest extends PHPUnit_Framework_TestCase
{

	/**
	 * @var Session
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		//if(!session_id())
		//session_start();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		session_destroy();
	}

	/**
	 * @covers Session::get
	 * @todo   Implement testGet().
	 */
	public function testGet()
	{
		session_start();
		$_SESSION['test'] = 'TEST';
		$this->assertEquals(Session::get('test'), 'TEST');
		$this->assertEquals(Session::get('bogus', false), false);
	}

	/**
	 * @covers Session::set
	 * @todo   Implement testSet().
	 */
	public function testSet()
	{
		Session::set('testSet', 'test');
		$this->assertArrayHasKey('testSet', $_SESSION);
		$this->assertEquals('test', $_SESSION['testSet']);
	}

	/**
	 * @covers Session::remove
	 * @todo   Implement testRemove().
	 */
	public function testRemove()
	{
		session_start();
		$_SESSION['test'] = 'TEST';
		Session::remove('test');
		$this->assertEquals(false, isset($_SESSION['test']));
	}

	/**
	 * @covers Session::reset
	 * @todo   Implement testReset().
	 */
	public function testReset()
	{
		session_start();
		$_SESSION['test'] = 'TEST';
		Session::reset();
		$this->assertEquals(0, count($_SESSION));
	}

	/**
	 * @covers Session::flash
	 */
	public function testFlash()
	{
		Session::flash('test', 'Trixie');
		Session::flash('test', 'Tinkerbell');
		$this->assertEquals('Tinkerbell', Session::flash('test'));
		$this->assertEquals(null, Session::flash('test'));
	}

}
